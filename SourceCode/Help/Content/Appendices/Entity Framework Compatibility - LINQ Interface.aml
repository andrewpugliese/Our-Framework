<?xml version="1.0" encoding="utf-8"?>
<topic id="3883c81f-d5e2-46fc-b4f7-591ac46ce538" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>CommonObjects supports the LINQ interface to build the database independent DbCommand objects using the DataAccess component.</para>
	  <para>Microsoft implementation of LINQ to SQL has many drawbacks. Most notably, there is no control over the SQL generated by the LINQ to SQL engine and developer needs to turn on the database profiler tools to see exactly what SQL is generated. The DataAccess layer adds the capability of getting the exact query generated to run for any backend database right into the Microsoft Visual Studio debugger. The SQL are generated with lesser subselects and appears to be hand-coded by the developer. </para>
	   <para></para>
	   <para>Also, one feature which DealerTrack needed is to do the cross context joins within the same LINQ queries. Microsoft implememtation do not support that but the DataAccess layer adds that capability. This enables DealerTrack teams to create their own domain contexts into its own assemblies, while the application developer can reference both and joins them in the same query. Note that the context must be pointing to the same physical database fot this to work. It does NOT enable the cross database queries. The DBCommand created from the LINQ uses parameterized queries and can be cached for frequently used commands. The command parameters can be tied to a variable and changing the variable and then invoking the command uses the latest value of that variable.
      </para>
      <para></para>
      <para> Here are the examples of queries which are supported:</para>
    </introduction>

    <section address="1">
      <title>1)	Example of Multi Context LINQ query</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx1.txt" />
      </content>
   </section>

    <section address="2">
      <title>2)	Example of Parameterized Query with Joins</title>
      <content>
      <para>LINQ uses variable names or property name of an object to create a DB parameter for the command object created from the LINQ. Value of this variable or property is used when the DB command is executed.</para>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx2a.txt" />
        <para>The above query could have been used with the a .NET object also</para>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx2b.txt" />
      </content>
    </section>

    <section address="3">
      <title>3)	Example of Query using other IEnumerable constructs</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx3.txt" />
      </content>
    </section>

    <section address="4">
      <title>4)	Example of Multi Select query</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx4.txt" />
      </content>
    </section>

    <section address="5">
      <title>5)	Example of LINQ “into” keyword</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx5.txt" />
      </content>
    </section>

    <section address="6">
      <title>6)	Example of Group By LINQ expression</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx6.txt" />
      </content>
    </section>

    <section address="7">
      <title>7)	Example of Self Join with IQueryable function</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx7.txt" />
      </content>
    </section>

    <section address="8">
      <title>8)	Example of PagingMgr with LINQ, returns DataTable, collection of dynamic objects</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx8.txt" />
      </content>
    </section>

    <section address="9">
      <title>9)	Example of PagingMgr enumerator – Automatically calls GetNextPage</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx9.txt" />
      </content>
    </section>

    <section address="10">
      <title>10) Example of Sub Select LINQ</title>
      <content>
        <code lang="C#" title="Examples" source="ExampleFiles\LINQEx10.txt" />
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="da02511b-cd66-4d3d-b9b9-082b9922f19f" />
    </relatedTopics>
  </developerConceptualDocument>
</topic>