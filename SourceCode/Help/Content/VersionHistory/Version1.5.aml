<?xml version="1.0" encoding="utf-8"?>
<topic id="4b2e698f-f981-4961-bb3d-3b973286b90b" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>Version 1.5 release</para>
    </introduction>
 
    <section address="New">
      <title>What's new 1.5</title>
      <content>
        <para>DataAccess improvements - TableDMLManager</para>
        <list class="bullet">
          <listItem><para>Added select with case statements support</para></listItem>
          <listItem><para>Added ability to reference columns by alias</para></listItem>
          <listItem><para>Added select distinct</para></listItem>
          <listItem><para>Added support for function/constants in select</para></listItem>
        </list>
      </content>     
      <content>
        <para>Unit Tests for DataAccess Manager</para>
        <list class="bullet">
          <listItem><para>Added Delete testing functionality which uses paging to delete all the rows in TestSequence table in multi-threaded
					approach, that can be performed while inserting/updating and paging</para></listItem>
          <listItem><para>Added ServerVersion, DbProviderVersion, ServerDateTime text boxes to display after successful connection</para></listItem>
        </list>
      </content>
      <content>
        <para>Core</para>
        <list class="bullet">
          <listItem><para>Added Copyright and Company along with Major/Minor version to assembly</para></listItem>
          <listItem><para>Made Core assembly the shared assembly for these attributes across all components to have uniform build versions</para></listItem>
          <listItem><para>XmlHelper.cs added functions from last merge</para></listItem>
          <listItem><para>ObjectFactory added functions to search the loaded assemblies and the executable folder to find the DAL assembly
     						and create the instance dynamically</para></listItem>
          <listItem><para>Added a Unit Test project for Core assembly - added Unit Tests for ObjectFactory methods</para></listItem>
        </list>
      </content>
      <content>
        <para>Logging</para>
        <list class="bullet">
          <listItem><para>New interfaces/methods for supporting Enterprise Library LogEntry class</para></listItem>
        </list>
      </content>       
      <content>
        <para>Config component</para>
        <list class="bullet">
          <listItem><para>Configuration DAL - removed BusinessDALFactory with ObjectFactory. Lookup bin if no DAL assembly is configured
          </para></listItem>
          <listItem><para>Added DAL.ConfigurationFile for using the App.config or web.config file</para></listItem>
          <listItem><para>ConfigManager - removed the .NET configuration collection hardcoding. Works with the settings return by DAL</para></listItem>
          <listItem><para>Config Web - added code to get the list of config sets, display</para></listItem>
          <listItem><para>Added Constants class and renamed it. Added comments to Core, Configuration and Caching components</para></listItem>
        </list>
      </content>  
    </section>
 
    <section address="InProcess">
      <title>What's in process for the upcoming releases</title>
      <content>
        <para>CatalogManager</para>
        <list class="bullet">
          <listItem><para>Begin development of Dynamic SQL for querying DbCatalog which will replace need for stored procedures.
						This code using the DMLManager and demonstrates its capabilities
          </para></listItem>
        </list>
      </content>
      <content>
        <para>DB2</para>
        <list class="bullet">
          <listItem><para>Adding debug scripting to DB2Command objects so that they can be executed in ControlCenter
          </para></listItem>
          <listItem><para>Analysis of iSeries support requirements
          </para></listItem>
          <listItem><para>CompoundSQL with embedded transactions analysis/support with IBM assistance
          </para></listItem>
         </list>
      </content>
      <content>
        <para>DataAccess</para>
        <list class="bullet">
          <listItem><para>MergeDbCommand (Upsert) capability across all 3 back-ends
          </para></listItem>
        </list>
      </content>
      <content>
        <para>PagingMgr</para>
        <list class="bullet">
          <listItem><para>Adding overloaded constructor to accept DMLManager object to provide paging on custom queries (that follow the indexing requirement)
          </para></listItem>
         </list>
      </content>
      <content>
        <para>Unit Tests</para>
        <list class="bullet">
          <listItem><para>Analysis on design that forms a context where QA can run them as well for their regression testing
          </para></listItem>
          <listItem><para>Enterprise Library Data Access Unit tests and got them to compile (required installation of Moq dll)
          </para></listItem>
        </list>
      </content>
      <content>
        <para>Configuration</para>
        <list class="bullet">
          <listItem><para>Adminweb with funtionality to add, edit and delete configuration sets and parameters
          </para></listItem>
        </list>
      </content>
    </section>

    <section address="InQueue">
      <title>What's in the queue to be addressed</title>
      <content>
        <para>DB2</para>
        <list class="bullet">
          <listItem><para>iSeries Support Implementation
          </para></listItem>
          <listItem><para>Implement recommendations/suggestions from IBM regading CompoundSQL with embedded transactions
          </para></listItem>
         </list>
      </content>
      <content>
        <para>DataAccess</para>
        <list class="bullet">
          <listItem><para>Implement Dynamic Loading of third-party libraries (ODP.NET, IBM.DATA, System.Data.SQLClient) depending
				on connection string and DataAccessManager instantiation
          </para></listItem>
          <listItem><para>Configurable setting on whether to use application catalog tables or direct to database catalog tables/views
          </para></listItem>
        </list>
      </content>
      <content>
        <para>PagingMgr</para>
        <list class="bullet">
          <listItem><para>Enhancement for returning custom classes instead of datatable (compatibility with EntityFramework across all back-ends)
          </para></listItem>
         </list>
      </content>
      <content>
        <para>Unit Tests</para>
        <list class="bullet">
          <listItem><para>Implement addition DataAccess unit tests
          </para></listItem>
         </list>
      </content>
      <content>
        <para>Cryptography and Archiving Utility</para>
        <list class="bullet">
          <listItem><para>Bring the old VB and older version of cryptography and zip libraries and upgrade to new libraries
          </para></listItem>
         </list>
      </content>
      <content>
        <para>Logging</para>
        <list class="bullet">
          <listItem><para>Implement logging to a database
          </para></listItem>
         </list>
      </content>
    </section>
    
    <relatedTopics>
      <link xlink:href="e6a2ec31-2890-4f06-9d98-e81f0bc04103" />
    </relatedTopics>
  </developerConceptualDocument>
</topic>