<?xml version="1.0" encoding="utf-8"?>
<topic id="7d75cefa-8c2e-411e-86a8-80f5b514d755" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
	<introduction>
    </introduction>
   <section address="Whatis">
      <title>What is the DealerTrack Common Framework?</title>
      <content>
         <para>The DealerTrack Common Framework (DCF) consists of a collection of software components and core infrastructure delivered as reusable software components designed to assist developers with the development of their DealerTrack applications.
        </para>
        <para>The DCF forms a foundation from which all DealerTrack applications can further integration with one another via a level of common software, functionality and behavior.  For example, the use of a Common Vehicle or Common Dealer software component provided by the DCF ensures a common set of functionality and behavior with the use of this entity for the entire suite of DealerTrack applications.
        </para>
        <para>Additionally, lower level components such as a common data access layer that is database independent allows software components to be written database agnostic.
        </para>
        <para>Currently the DCF consists of a set of low level software component providing a common foundation of software services.  Components for database access, logging, validation, caching, exception management, security and more are available.
        </para>
        <para>The DCF will continue to expand in the months ahead as common entities are added to the framework.  Entities such as dealer, user, customer and vehicle to name a few will be available from the framework providing common code, functionality, and application behavior to be made available and used across the entire suite of DealerTrack applications.
        </para>
      </content>
   </section>
   <section address="Overview">
      <title>Here is a brief overview of some of the components and their functionality</title>
      <content>
        <autoOutline />
        <para></para>
      </content>
      <sections>
          <section address="DbAccess Layer">
              <title>DbAccess Layer</title>
              <content>
                  <list class="bullet">
          			<listItem><para>The database access component provides vendor neutral interface towards building and executing commands in the .Net framework.</para></listItem>
          			<listItem><para>The component includes the standard functions for building and executing commands, discovering and caching parameters; but it also has classes that support building Compound SQL statements that automatically handle parameter creation so that multiple database commands can be sent to the database in a single call to the database.</para></listItem>
          			<listItem><para>These compound SQL statements can include nested transactions so that there is no need to hold resources in between calls to the database.</para></listItem>
          			<listItem><para>The compound commands can include calls to stored procedures and parameterized dynamic SQL.</para></listItem>
          			<listItem><para>The dynamic SQL along with the in-memory cached database catalog, there is rich support for automatically generating Select, Insert, Delete, Merge commands that will work against the different databases.  By including .Net expression trees, the component provides support for writing complex joins and benefiting from the C# compiler to check for errors.</para></listItem>
          			<listItem><para>The Paging class provides a highly scalable interface for querying extremely large result sets efficiently without locking resources or resorting to full table scans and sorts. This paging class includes an interface that works directly with Entity Framework objects.</para></listItem>
                  </list>
              </content>
          </section>
          <section address="Configuration">
              <title>Configuration</title>
              <content>
                  <list class="bullet">
          			<listItem><para>Configuration component has classes for accessing the application settings and global settings stored in config files or database. Configuration DAL component contains classes generated by entity framework POCO and uses the database access ExecuteCollection function to get the configuration entities. Configuration component also support concept of configuration parameters which can be used for runtime replacement in the configuration values.</para></listItem>
          			<listItem><para>Configuration web utility uses MVC and AJAX to offer ability to manage the configuration sets, versions and settings.</para></listItem>
                  </list>
              </content>
          </section>
          <section address="Security">
              <title>Security</title>
              <content>
                  <list class="bullet">
           			<listItem><para>Hashing using MD5, SHA1, SHA256, SHA384, SHA512</para></listItem>
          			<listItem><para>Encryption using symmetric algorithms, namely DES, RC2, Rijndael, TripleDES.</para></listItem>
          			<listItem><para>Encryption using asymmetric algorithms, RSA &amp; DSA.</para></listItem>
          			<listItem><para>Digital envelope using asymmetric RSA for enveloping, symmetric AES for encryption</para></listItem>
          			<listItem><para>Digital signature using asymmetric RSA and DSA.</para></listItem>
          			<listItem><para>Signing XML class using RSA</para></listItem>
          			<listItem><para>Xml packaging using RSA for enveloping and signing, AES for encypting and SHA1 for hashing</para></listItem>
          			<listItem><para>Encrypted string with expiration timings</para></listItem>
                  </list>
              </content>
          </section>
          <section address="Logging">
              <title>Application Logging Facilties</title>
              <content>
                  <list class="bullet">
           			<listItem><para>The ability to log messages to multiple/concurrent destinations (such as Windows Event Log, database, memory file)</para></listItem>
          			<listItem><para>
          			The facility can be used with or without the configuration manager allowing for both configuration and programmatic setup</para></listItem>
          			<listItem><para>Support for the following targets:</para>
          			<list class="bullet">
	           			<listItem><para>Windows Event Logger</para></listItem>
	           			<listItem><para>MSMQ Logger</para></listItem>
	           			<listItem><para>Memory File logger</para></listItem>
	           			<listItem><para>Standard file logging</para></listItem>
	           			<listItem><para>High performance Trace Logging (with a TraceViewer windows application)</para></listItem>
          			</list>
          		  </listItem>
                  </list>
               </content>
          </section>  
          <section address="Utility Applications">
              <title>Database Setup Utility</title>
              <content>
                  <list class="bullet">
           			<listItem><para>The utility provides a tool for executing scripts for setting up a new database or altering an existing one.  It uses the back-specific command line tools so there are no limits on what objects can be created or special syntax on the DDL.</para></listItem>
          			<listItem><para>In addition, the tool also provides examples and demonstrations of the framework's capabilities with multi-threaded concurrent database operations across the different backend databases with the same code base.</para></listItem>
                  </list>
              </content>
          </section>          
       </sections>
    </section>

    <relatedTopics>
      <link xlink:href="43113ffa-03e5-4c28-91d7-5a838a174a38" />
      <link xlink:href="e6a2ec31-2890-4f06-9d98-e81f0bc04103" />
      <link xlink:href="da02511b-cd66-4d3d-b9b9-082b9922f19f" />
      <link xlink:href="1b88be0d-fd29-4067-9041-c613def825c0" />
    </relatedTopics>
  </developerConceptualDocument>
</topic>
