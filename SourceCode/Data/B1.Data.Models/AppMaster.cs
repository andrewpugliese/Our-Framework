//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace B1.Data.Models
{
    public partial class AppMaster
    {
        #region Primitive Properties
    
        public virtual int AppCode
        {
            get;
            set;
        }
    
        public virtual string AppId
        {
            get;
            set;
        }
    
        public virtual string Remarks
        {
            get;
            set;
        }
    
        public virtual bool IsTaskProcessingEngine
        {
            get;
            set;
        }
    
        public virtual Nullable<int> LastModifiedUserCode
        {
            get { return _lastModifiedUserCode; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_lastModifiedUserCode != value)
                    {
                        if (UserMaster != null && UserMaster.UserCode != value)
                        {
                            UserMaster = null;
                        }
                        _lastModifiedUserCode = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _lastModifiedUserCode;
    
        public virtual Nullable<System.DateTime> LastModifiedDateTime
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual UserMaster UserMaster
        {
            get { return _userMaster; }
            set
            {
                if (!ReferenceEquals(_userMaster, value))
                {
                    var previousValue = _userMaster;
                    _userMaster = value;
                    FixupUserMaster(previousValue);
                }
            }
        }
        private UserMaster _userMaster;
    
        public virtual ICollection<AppSession> AppSessions
        {
            get
            {
                if (_appSessions == null)
                {
                    var newCollection = new FixupCollection<AppSession>();
                    newCollection.CollectionChanged += FixupAppSessions;
                    _appSessions = newCollection;
                }
                return _appSessions;
            }
            set
            {
                if (!ReferenceEquals(_appSessions, value))
                {
                    var previousValue = _appSessions as FixupCollection<AppSession>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAppSessions;
                    }
                    _appSessions = value;
                    var newValue = value as FixupCollection<AppSession>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAppSessions;
                    }
                }
            }
        }
        private ICollection<AppSession> _appSessions;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupUserMaster(UserMaster previousValue)
        {
            if (previousValue != null && previousValue.AppMasters.Contains(this))
            {
                previousValue.AppMasters.Remove(this);
            }
    
            if (UserMaster != null)
            {
                if (!UserMaster.AppMasters.Contains(this))
                {
                    UserMaster.AppMasters.Add(this);
                }
                if (LastModifiedUserCode != UserMaster.UserCode)
                {
                    LastModifiedUserCode = UserMaster.UserCode;
                }
            }
            else if (!_settingFK)
            {
                LastModifiedUserCode = null;
            }
        }
    
        private void FixupAppSessions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AppSession item in e.NewItems)
                {
                    item.AppMaster = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AppSession item in e.OldItems)
                {
                    if (ReferenceEquals(item.AppMaster, this))
                    {
                        item.AppMaster = null;
                    }
                }
            }
        }

        #endregion
    }
}
